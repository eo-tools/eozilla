[project]
name = "s2gos-airflow"
version = "0.0.3.dev"
description = "Airflow DAGs for the ESA DTE-S2GOS synthetic scene generator service"
requires-python = "==3.12"

[build-system]
requires = ["hatch"]
build-backend = "hatchling.build"

[tool.hatch.build]
sources = ["src"]
exclude = ["src/tests/**/*", "src/dags/**/*"]

[tool.hatch.build.targets.sdist]
include = [
  "src/s2gos_airflow/**/*",
  "pyproject.toml",
  "README.md",
  "LICENSE",
]

[tool.hatch.build.targets.wheel]
include = [
  "src/s2gos_airflow/**/*"
]

#### pixi ###################

[tool.pixi.activation.env]
AIRFLOW_HOME="$PIXI_PROJECT_ROOT/.airflow"
AIRFLOW__CORE__LOAD_EXAMPLES="False"  
AIRFLOW__CORE__DAGS_FOLDER="$PIXI_PROJECT_ROOT/src/dags"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.dependencies]
python = "3.12.*"

[tool.pixi.pypi-dependencies]
# Airflow
apache-airflow = "==3.0.2"
apache-airflow-client = "==3.0.2"
# S2GOS service implementation
s2gos-common = { path = "../s2gos-common", editable = true }
s2gos-server = { path = "../s2gos-server", editable = true }
fastapi = "*"
pydantic = "*"
pyyaml = "*"
typer = "*"
uvicorn = "*"
# DAG testing
jupyter = "*"
pandas = "*"
xarray = "*"
zarr = "*"
# Dev tools
isort = "*"
mypy = "*"
pytest = "*"
ruff = "*"

[tool.pixi.tasks]
install-airflow = """
export AIRFLOW_VERSION=3.0.2
export PYTHON_VERSION=$(python -c 'import sys; print(f"{sys.version_info.major}.{sys.version_info.minor}")')
pip install "apache-airflow==$AIRFLOW_VERSION" \\
  --constraint "https://raw.githubusercontent.com/apache/airflow/constraints-$AIRFLOW_VERSION/constraints-no-providers-$PYTHON_VERSION.txt"
"""
test = "pytest tests"
format = "isort dags && ruff format dags"
check = "ruff check dags"
typecheck = "mypy dags"
